포인터 학습에 앞서서.....

1. 객체지향과 절차지향의 원리부터 알아야 포인터를 쓸 수 있다.
	일반적으로 절차지향은 아주 최소한의 자원을 가지고 프로그래밍을 할 수 있게 특화된 언어
	컴퓨터의 처리속도와 가장 유사한 언어가 c언어다.
	절차적으로만 실행이 되기 때문에 코드의 순서에 많은 신경을 써야하고 혼자 5천줄 이상의 코드를 짠다면 기억력이 좋아야함.
	유지보수가 어려울 수 있다.

	다만, 장점은 절차적으로 진행이 되기 때문에...
	포인터를 무한대로 활용할 수 있다.

	객체지향은 개발자들을 여러명 두고 각각의 코드를 만들게 시켜도 각각의 실행을 따로 담당할 수 있으며 클래스로 하나에 묶어서 
	실행이 가능하기 때문에 응용프로그램에 많이 쓰인다.

2. 배열은 상수이고, 포인터는 변수이다.
	왜 그런지는 프로그래밍 강의에서.

3. 임베디드에서의 포인터 활용.
	
일단....포인터는 주소이므로 unsigned int


int a[3] = {1, 2, 3};

 0x100 a[0] == *a , *(a + 0)
 0x104 a[1] == *(a+1)
 ax108 a[2] == *(a+2)

	따라서 a는 배열 첫 요소에 대한 주소 (배열 한 칸이 한 단위)
	&a는 배열의 시작 주소. 				(배열 전체가 한 단위)

간단하게...
int* 			1차원 포인터
int(*)[3] 		2차원 포인터
int(*)[2][3] 	3차원 포인터


